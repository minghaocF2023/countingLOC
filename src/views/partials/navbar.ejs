<style>
    .logo {
        width: 6rem;
    }

    .nav-button {
        border: none;
        outline: none;
    }
    
</style>

<nav class="navbar navbar-expand-lg navbar-light bg-light fixed-top p-2 nav-search-open">
    <!-- <nav class="navbar navbar-light bg-light fixed-top"> -->
    <button class="navbar-toggler nav-button" type="button" data-toggle="collapse" data-target="#navbarNav"
        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
        <!-- <span class="navbar-toggler-icon"></span> -->
        <i class="fas fa-bars"></i> Menu
    </button>
    <a class="navbar-brand" href="/"><img src="/images/logo.svg" class="logo" alt=""></a>
    <button id="search-btn" class="navbar-toggler nav-button" type="button" data-toggle="collapse"
        data-target="#search-navbar" aria-controls="search-navbar" aria-expanded="false" aria-label="Toggle navigation">
        <i id="search-icon" class="bi bi-search"></i>
        <i id="cancel-icon" class="bi bi-x-lg d-none">Cancel</i>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
        <div  class="bg-body-secondary p-2 py-1 rounded-pill d-flex justify-content-between my-2">
            <div style="width: max-content;" class=" p-1 d-flex justify-content-center align-items-center rounded-pill">
                <div class="overflow-hidden" style="background-color:#fff; border-radius: 50%; height: 2rem; aspect-ratio: 1 / 1;">
                    <img id="navImg" src="images/ambulance.png" style="height: 2rem; aspect-ratio: 1 / 1;"  alt="">
                </div>
                <b class="ms-2" id="username">{username}</b>
                <span class="dropdown">
                    <button class="btn dropdown-toggle" type="button" data-toggle="dropdown">
                        Undefined
                    </button>
                    <ul class="dropdown-menu mt-3 mb-3 p-2">
                        <li class="ml-1"><a id="OK"><i class="fas fa-check-circle" style="color:green"></i> OK</a></li>
                        <li class="ml-1"><a id="Help"><i class="fas fa-exclamation-circle" style="color:rgb(255, 230, 0)"></i> Help</a></li>
                        <li class="ml-1"><a id="Emergency"><i class="fas fa-exclamation-triangle" style="color:red"></i> Emergency</a></li>
                    </ul>
                </span>
            </div>
            <a href="/userprofile" class="my-1 btn btn-outline-primary rounded-pill">
                <i class="bi bi-person-circle"> User Profile</i>
            </a>

        </div>
        <ul class="navbar-nav mr-auto">
            <li class="nav-item mr-2">
                <a class="nav-link esn-directory btn btn-outline-secondary" href="/esndirectory">ESN Directory</a>
            </li>
            <li class="nav-item mr-2">
                <a class="nav-link public-chat btn btn-outline-secondary" href="/announcement">Announcement</a>
            </li>
            <li class="nav-item mr-2">
                <a class="nav-link public-chat btn btn-outline-secondary" href="/chatwall">Chat Wall</a>
            </li>
            <li class="nav-item mr-2">
                 <a class="nav-link shelter btn btn-outline-secondary" href="/shelter">Shelter</a>
            </li>  
            <li class="nav-item mr-2">
                <a class="nav-link appointments btn btn-outline-secondary" href="#"
                    id="appointmentsLink">Appointments</a>
            </li>
            <li class="nav-item mr-2">
                <a class="nav-link public-chat btn btn-outline-secondary" href="/market">Market</a>
            </li>
            <li class="nav-item mr-2">
                <a class="nav-link speed-test btn btn-outline-secondary" href="/request">Request List</a>
            </li>
            <li  class="nav-item mr-2">
                <a id="speedtest" class="nav-link speed-test btn btn-outline-secondary d-none" href="/speedtest">Speed Test</a>
            </li>
            <li class="nav-item mr-2">
                <a class="nav-link public-chat btn btn-outline-secondary" href="/emergencies">Emergency Events</a>
            </li>
        </ul>
        <ul class="navbar-nav">
            <li class="nav-item">
                <a id="logout" class="nav-link btn btn-primary text-white active" href="/join">Logout</a>
            </li>
        </ul>
    </div>
    <div class="collapse navbar-collapse" id="search-navbar">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item mr-2">
                <div class="input-group my-2">
                    <input type="text" class="form-control" id="search-content" placeholder="Search something..."
                        aria-label="Recipient's username" aria-describedby="button-addon2">
                    <button class="btn btn-outline-secondary" type="button" id="search-button"><i
                            class="bi bi-search"></i></button>
                </div>
            </li>
        </ul>

    </div>
</nav>
<script src="https://cdn.socket.io/4.5.4/socket.io.min.js"></script>
<script>
    const curUserIsDoctor = async () => {
        // Endpoint 'users/:username/isdoctor' returns a JSON object with a boolean property 'isDoctor'
        try {
            const response = await axios.get(`/users/${localStorage.getItem('username')}/isdoctor`);
            return response.data.isDoctor;
        } catch (error) {
            console.error('Could not determine user role', error);
            return false;
        }
    }
    const setAppointmentsLink = (isDoctor) => {
        const appointmentsLink = document.getElementById('appointmentsLink');
        if (isDoctor) {
            appointmentsLink.setAttribute('href', '/doctorAppointment');
        } else {
            appointmentsLink.setAttribute('href', '/patientAppointment');
        }
    }
    document.addEventListener('DOMContentLoaded', () => {
        curUserIsDoctor().then(setAppointmentsLink);
    });

    const getProfileImg = async () => {
        const profile = await axios.get('/profile', {
            headers: {
            Authorization: `Bearer ${localStorage.getItem('token')}`,
            },
        });

        return profile.data;
        };

        $(window).on('load',()=>{
            connectSocket(localStorage.getItem('username'));
            getProfileImg().then((data)=>{
                $("#navImg").attr('src', data.profile.profileImage);
            })

            if(localStorage.getItem('role') === 'Administrator'){
                $("#speedtest").removeClass('d-none');
            }
            
        })


    $("#search-btn").on("click", () => {
        if (!$("#search-navbar").hasClass("show")) {
            $("#search-icon").addClass("d-none");
            $("#cancel-icon").removeClass("d-none");
        } else {
            $("#cancel-icon").addClass("d-none");
            $("#search-icon").removeClass("d-none");
            window.location.reload();
        }
    })

    $("#search-btn").on("click", () => {
        if (!$("#search-navbar").hasClass("show")) {
            $("#container").addClass("search-margin-expand");
            $("#container").removeClass("search-margin");
            $("#chat-container").addClass("search-margin-expand");
            $("#chat-container").removeClass("search-margin");
        } else {
            $("#container").addClass("search-margin-fold");
            $("#container").removeClass("search-margin-expand");
            $("#chat-container").addClass("search-margin-fold");
            $("#chat-container").removeClass("search-margin-expand");
            window.location.reload();
        }
    })

    const connectSocket = (username) => {

        const socket = io(undefined, { autoConnect: false });
        socket.auth = { username };
        socket.connect();
       
        // listen to admin profile update
        socket.on('profileUpdate', (msg) => {
            if(msg.username === username){
                // if user account become inactive, logout
                if(msg.isActive === false ){
                    localStorage.removeItem('token');
                    localStorage.removeItem('username');
                    localStorage.removeItem('role');
                    window.location.href = '/join';
                }else{
                    // set new username
                    localStorage.setItem('username', msg.newUsername);
                }
            } 
        });

    };



</script>